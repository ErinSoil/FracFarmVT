#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(openmeteo)
##call in the analytical data
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
##call in the analytical data
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
data <- read.csv("data.csv")
data2<-data %>%
left_join(.Loc,by="Field_Code")
data2<-data %>%
left_join(.Location,by="Field_Code")
##call in the analytical data
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
data <- read.csv("data.csv")
data2<-data %>%
left_join(.Loc,by="Field_Code")
library(dplyr)
# join tables
data2 <- data %>%
left_join(Loc, by = "Field_Code")
view(data2)
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","Latitude", "Longitude", tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","Latitude", "Longitude", "tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
#Models
#Correlation plot
library(corrplot)
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
view(cordata)
library(corrplot)
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","Latitude", "Longitude", "tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
view(cordata)
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon +aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
#look at the unexplained varibility in the models to see if lat/long can explain
library(nlme)
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon +aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
F_Final <- fitted(m3)
R_Final <- residuals(m3, type = "pearson", scaled = TRUE)
N = !is.na(data$mgCpergSoilM)
Rfull <- NA
Rfull[N] <- R_Final
op <- par(mfrow = c(2,2), mar = c(5,4,1,1))
plot(F_Final, R_Final)
hist(Rfull)
plot(Rfull ~ data2$aggregate_stability)
plot(Rfull ~ data2$soil_texture_clay)
plot(Rfull ~ data2$active_carbon)
plot(Rfull ~ data2$tmeanC)
plot(Rfull ~ data2$ppt.cm)
plot(Rfull ~ data2$Latitude)
plot(Rfull ~ data2$ph)
plot(Rfull ~ data2$Longitude)
par(op)
m4M=gls(logitpropM~ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon,
data=data, na.action=na.exclude, method="ML")
F_Final <- fitted(m4M)
R_Final <- residuals(m4M, type = "pearson", scaled = TRUE)
N = !is.na(data2$logitpropM)
Rfull <- NA
Rfull[N] <- R_Final
op <- par(mfrow = c(2,2), mar = c(5,4,1,1))
plot(F_Final, R_Final)
hist(Rfull)
plot(Rfull ~ data2$aggregate_stability)
plot(Rfull ~ data2$soil_texture_clay)
plot(Rfull ~ data2$active_carbon)
plot(Rfull ~ data2$tmeanC)
plot(Rfull ~ data2$ppt.cm)
plot(Rfull ~ data2$ph)
plot(Rfull ~ data2$Latitude)
plot(Rfull ~ data2$Longitude)
par(op)
m3P=gls(mgCpergSoilP~ppt.cm*tmeanC
+aggregate_stability+active_carbon,
data=data, na.action=na.exclude, method="REML")
F_Final <- fitted(m3P)
R_Final <- residuals(m3P, type = "pearson", scaled = TRUE)
N = !is.na(data2$mgCpergSoilP)
Rfull <- NA
Rfull[N] <- R_Final
op <- par(mfrow = c(2,2), mar = c(5,4,1,1))
plot(F_Final, R_Final)
hist(Rfull)
plot(Rfull ~ data2$Latitude)
plot(Rfull ~ data2$Longitude)
par(op)
@Manual{,
Manual{,
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(openmeteo)
library(ggplot2)
library(sf)
library(maps)
library(mapdata)
vermont_map <- map_data("state")
vermont_map <- subset(vermont_map, region == "vermont")
# Plot the map and data points
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = Loc, aes(x = lon, y = lat), color = "red", size = 3) +
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude") +
theme_minimal()
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
summary(data$mgCpergSoilM)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(11, 15, 21, 25),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(3, 48)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
library(corrplot)
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","Latitude", "Longitude", "tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
view(cordata)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(nlme)
library(ggeffects)
library(emmeans)
##call in the analytical data
data <- read.csv("data.csv")
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon + aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
summary(m3)
summary(data$soil_texture_clay)
summary(data$ppt.cm)
pred_3way <- ggpredict(m3, terms = c("tmeanC","ppt.cm[101,110]",
"soil_texture_clay[10, 32]"))
pred_3way$ppt_group <- pred_3way$group
levels(pred_3way$ppt_group) <- c("low (92-104)",
"high (104-142)")
pred_3way$clay_facet <- pred_3way$facet
levels(pred_3way$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
data <- data %>%
drop_na(ppt.cm) %>%
drop_na(soil_texture_clay) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)),
clay_facet = cut(soil_texture_clay, breaks = c(6,19,54)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
levels(data$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
mgMAOM_3way <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilM, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_3way, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
facet_wrap(~clay_facet) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression(paste("mg MAOM C g"^-1,"soil"))) +
scale_x_continuous(expression("Mean Annual Temperature (°C)"),
label = scales::comma) +
guides(col=guide_legend(title="MAP (cm)")) +
scale_color_manual(values = c("lightblue", "blue")) # adjust colors if needed
own_theme <- theme_bw(base_size = 11) +
theme(rect = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
axis.line = element_line(color = "black"),
panel.grid.minor = element_blank())
pred_3way <- ggpredict(m3, terms = c("tmeanC","ppt.cm[101,110]",
"soil_texture_clay[10, 32]"))
pred_3way$ppt_group <- pred_3way$group
levels(pred_3way$ppt_group) <- c("low (92-104)",
"high (104-142)")
pred_3way$clay_facet <- pred_3way$facet
levels(pred_3way$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
data <- data %>%
drop_na(ppt.cm) %>%
drop_na(soil_texture_clay) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)),
clay_facet = cut(soil_texture_clay, breaks = c(6,19,54)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
levels(data$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
mgMAOM_3way <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilM, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_3way, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
facet_wrap(~clay_facet) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression(paste("mg MAOM C g"^-1,"soil"))) +
scale_x_continuous(expression("Mean Annual Temperature (°C)"),
label = scales::comma) +
guides(col=guide_legend(title="MAP (cm)")) +
scale_color_manual(values = c("lightblue", "blue")) # adjust colors if needed
mgMAOM_3way
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
m4M=gls(logitpropM~ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon,
data=data, na.action=na.exclude, method="ML")
summary(m4M)
own_theme <- theme_bw(base_size = 11) +
theme(rect = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
axis.line = element_line(color = "black"),
panel.grid.minor = element_blank())
pred_3way <- ggpredict(m4M, terms = c("tmeanC","ppt.cm[101,110]",
"soil_texture_clay[10, 32]"))
pred_3way$ppt_group <- pred_3way$group
levels(pred_3way$ppt_group) <- c("low (92-104)",
"high (104-142)")
pred_3way$clay_facet <- pred_3way$facet
levels(pred_3way$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
data <- data %>%
drop_na(ppt.cm) %>%
drop_na(soil_texture_clay) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)),
clay_facet = cut(soil_texture_clay, breaks = c(6,19,54)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
levels(data$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
propMAOM_3way <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = logitpropM, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_3way, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
facet_wrap(~clay_facet) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression(paste("logitpropM"^-1,"soil"))) +
scale_x_continuous(expression("Mean Annual Temperature (°C)"),
label = scales::comma) +
guides(col=guide_legend(title="MAP (cm)")) +
scale_color_manual(values = c("lightblue", "blue")) # adjust colors if needed
propMAOM_3way
pred_3way <- ggpredict(m4M, terms = c("tmeanC","ppt.cm[101,110]",
"soil_texture_clay[10, 32]"))
pred_3way$ppt_group <- pred_3way$group
levels(pred_3way$ppt_group) <- c("low (92-104)",
"high (104-142)")
pred_3way$clay_facet <- pred_3way$facet
levels(pred_3way$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
data <- data %>%
drop_na(ppt.cm) %>%
drop_na(soil_texture_clay) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)),
clay_facet = cut(soil_texture_clay, breaks = c(6,19,54)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
levels(data$clay_facet) <- c("low clay (6-19%)",
"high clay (19-54%)")
propMAOM_3way <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = logitpropM, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_3way, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
facet_wrap(~clay_facet) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression(paste("logitpropM"))) +
scale_x_continuous(expression("Mean Annual Temperature (°C)"),
label = scales::comma) +
guides(col=guide_legend(title="MAP (cm)")) +
scale_color_manual(values = c("lightblue", "blue")) # adjust colors if needed
propMAOM_3way
