#Create a plot with the regression line
ggplot2(data, aes(x = mgCpergSoilM, y = mgCpergSoilP) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "MAOM") +
theme_minimal()
#Create a plot with the regression line
ggplot2(data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
ggplot2 (data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "MAOM") +
theme_minimal()
ggplot2(data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
ggplot(data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "MAOM") +
theme_minimal()
library(ggplot2)
ggplot2(data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "MAOM") +
theme_minimal()
ggplot2(data, aes(x = mgCpergSoilP, y = mgCpergSoilM) +
ggplot(data, aes(x = mgCpergSoilP, y = mgCpergSoilM)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "MAOM") +
theme_minimal()
ggplot(data, aes(x = mgCpergSoilM, y = mgCpergSoilP)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "MAOM",
y = "POM") +
theme_minimal()
regression_model <- lm(mgCpergSoilP ~ Tillage1to4, data = data)
regression_model <- lm(mgCpergSoilP ~ Tillage_1to4, data = data)
#Summarize the regression model
summary(regression_model)
#Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilP, y = Tillage_1to4)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "POM",
y = "Tillage") +
theme_minimal()
#Create a plot with the regression line
ggplot(data, aes(x = Tillage_1to4, y = mgCpergSoilP)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgPOC on mgMAOC",
x = "Tillage",
y = "POM") +
theme_minimal()
regression_model <- lm(mgCpergSoilP ~ Tillage_1to4, data = data)
#Summarize the regression model
summary(regression_model)
ggplot(data, aes(x = Tillage_1to4, y = mgCpergSoilP)) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
labs(x = "Tillage", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
ggplot(data, aes(x = as.factor(Tillage_1to4), y = mgCpergSoilP)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
ggplot(data, aes(x = as.factor(Tillage_1to4), y = mgCpergSoilM)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
ggplot(data, aes(x = as.factor(Tillage_1to4), y = mgCpergSoilM)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "MAOM") +
ggtitle("Relationship between Tillage and MAOM") +
theme_minimal()
#Ensure Tillage_1to4 is a factor
data <- data %>%
mutate(Tillage_1to4 = as.factor(Tillage_1to4))
#Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_1to4, data = data)
summary(anova_result)
#Ensure Tillage_1to4 is a factor
data <- data %>%
mutate(Tillage_1to4 = as.factor(Tillage_1to4))
#Perform ANOVA
anova_result <- aov(mgCpergSoilM ~ Tillage_1to4, data = data)
summary(anova_result)
#Perform Tukey's HSD test if ANOVA is significant
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
# Optionally, plot the Tukey HSD results
plot(tukey_result)
#Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_1to4, data = data)
summary(anova_result)
#Perform Tukey's HSD test if ANOVA is significant
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
# Optionally, plot the Tukey HSD results
plot(tukey_result)
ggplot(data, aes(x = as.factor(Tillage_1to4), y = mgCpergSoilM)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "MAOM") +
ggtitle("Relationship between Tillage and MAOM") +
theme_minimal()
library(multcomp)
# Create a new variable that combines Tillage_1to4 = 2, 3, and 4 into a single group
data <- data %>%
mutate(Tillage_Grouped = ifelse(Tillage_1to4 == 1, "1", "2, 3, 4"))
# Ensure the new variable is a factor
data$Tillage_Grouped <- as.factor(data$Tillage_Grouped)
# Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_Grouped, data = data)
summary(anova_result)
if (summary(anova_result)[[1]]$`Pr(>F)`[1] < 0.05) {
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
plot(tukey_result)
} else {
print("No significant difference between tillage groups.")
# Create box plot with means
ggplot(data, aes(x = Tillage_Grouped, y = mgCpergSoilP)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage Grouped", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
# Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_Grouped, data = data)
summary(anova_result)
library(multcomp)
# Create a new variable that combines Tillage_1to4 = 2, 3, and 4 into a single group
data <- data %>%
mutate(Tillage_Grouped = ifelse(Tillage_1to4 == 1, "1", "2, 3, 4"))
# Ensure the new variable is a factor
data$Tillage_Grouped <- as.factor(data$Tillage_Grouped)
# Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_Grouped, data = data)
summary(anova_result)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
load your libraries
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
#load your libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(emmeans)
library(nlme)
library(ggeffects)
library (gmodels)
library(reshape2)
library(car) # for Levene's Test
library(ggpubr) # for easy plotting
library(multcomp) # for Tukey's HSD test
##call in the analytical data
data <- read.csv("data.csv")
# Create a new variable that combines Tillage_1to4 = 2, 3, and 4 into a single group
data <- data %>%
mutate(Tillage_Grouped = ifelse(Tillage_1to4 == 1, "1", "2, 3, 4"))
# Ensure the new variable is a factor
data$Tillage_Grouped <- as.factor(data$Tillage_Grouped)
# Perform ANOVA
anova_result <- aov(mgCpergSoilP ~ Tillage_Grouped, data = data)
summary(anova_result)
# If ANOVA is significant, perform Tukey's HSD test
if (summary(anova_result)[[1]]$`Pr(>F)`[1] < 0.05) {
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
plot(tukey_result)
} else {
print("No significant difference between tillage groups.")
}
ggplot(data, aes(x = Tillage_Grouped, y = mgCpergSoilP)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage Grouped", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
# Perform ANOVA
anova_result <- aov(mgCpergSoilM ~ Tillage_Grouped, data = data)
summary(anova_result)
if (summary(anova_result)[[1]]$`Pr(>F)`[1] < 0.05) {
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
plot(tukey_result)
} else {
print("No significant difference between tillage groups.")
}
# Create box plot with means
ggplot(data, aes(x = Tillage_Grouped, y = mgCpergSoilM)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage Grouped", y = "POM") +
ggtitle("Relationship between Tillage and POM") +
theme_minimal()
ggplot(data, aes(x = Tillage_Grouped, y = mgCpergSoilM)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage Grouped", y = "MAOM") +
ggtitle("Relationship between Tillage and MAOM") +
theme_minimal()
#Perform ANOVA
anova_result <- aov(aggregate_stability ~ Type.x, data = data)
summary(anova_result)
#Perform Tukey's HSD test if ANOVA is significant
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
# Optionally, plot the Tukey HSD results
plot(tukey_result)
# Create box plot with means
ggplot(data, aes(x = Type.x, y = aggregate_stability)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Field Type", y = "Aggregate Stability") +
ggtitle("Relationship between Field Type and Aggregate Stability") +
theme_minimal()
install.packages("fs")
install.packages("stringr")
install.packages("stringr")
#POM and MAOM
# Perform linear regression
regression_model <- lm(mgCpergSoilP ~ mgCpergSoilM, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilM, y = mgCpergSoilP)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of POM on MAOM",
x = "MAOM",
y = "POM") +
theme_minimal()
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
load your libraries
##call in the analytical data
data <- read.csv("data.csv")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(emmeans)
library(nlme)
library(ggeffects)
library (gmodels)
library(reshape2)
library(car) # for Levene's Test
library(ggpubr) # for easy plotting
library(multcomp) # for Tukey's HSD test
##call in the analytical data
data <- read.csv("data.csv")
#POM and MAOM
# Perform linear regression
regression_model <- lm(mgCpergSoilP ~ mgCpergSoilM, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilM, y = mgCpergSoilP)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of POM on MAOM",
x = "MAOM",
y = "POM") +
theme_minimal()
#POM and MAOM
# Perform linear regression
regression_model <- lm(mgCpergSoilM ~ mgCpergSoilP, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilP, y = mgCpergSoilM)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of MAOM on POM",
x = "POM",
y = "MAOM") +
theme_minimal()
#Perform ANOVA
anova_result <- aov(active_carbon ~ Type.x, data = data)
summary(anova_result)
tukey_result <- TukeyHSD(anova_result)
print(tukey_result)
# Optionally, plot the Tukey HSD results
plot(tukey_result)
# Create box plot with means
ggplot(data, aes(x = Type.x, y = active_carbon)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Field Type", y = "Active Carbon") +
ggtitle("Relationship between Field Type and Active Carbon") +
theme_minimal()
# Count occurrences of "compost" in the column
count_compost <- sum(grepl("compost", data$Soil.amendments, ignore.case = TRUE))
# Output the count
count_compost
regression_model <- lm(active_carbon ~ Tillage_1to4, data = data)
#Summarize the regression model
summary(regression_model)
# Example scatter plot with jitter
library(ggplot2)
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "PoxC") +
ggtitle("Relationship between Tillage and PoxC") +
theme_minimal()
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon) +
# Example scatter plot with jitter
library(ggplot2)
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "PoxC") +
ggtitle("Relationship between Tillage and PoxC") +
theme_minimal()
ggplot2(data, aes(x = as.factor(Tillage_1to4), y = active_carbon) +
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "PoxC") +
ggtitle("Relationship between Tillage and PoxC") +
theme_minimal()
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon)) +
ggplot(data, aes(x = as.factor(Tillage_1to4), y = active_carbon)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue", alpha = 0.5) +
geom_jitter(width = 0.3, height = 0, alpha = 0.7) +
stat_summary(fun = "mean", geom = "point", shape = 20, size = 3, color = "red") +
labs(x = "Tillage", y = "PoxC") +
ggtitle("Relationship between Tillage and PoxC") +
theme_minimal()
m3P=gls(mgCpergSoilP~ppt.cm*tmeanC
+aggregate_stability+active_carbon
, data=data, na.action=na.exclude, method="ML")
summary(m3P)
ppt and tmeanC, option 2
#ppt and tmeanC, option 2
summary(data$ppt.cm)
pred_tmeanppt <- ggpredict(m3P, terms = c("tmeanC","ppt.cm[101,110]"))
pred_tmeanppt$ppt_group <- pred_tmeanppt$group
levels(pred_tmeanppt$ppt_group) <- c("low (92-104)",
"high (104-142)")
data <- data %>%
drop_na(ppt.cm) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
mgPOM_tmeanppt <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanppt, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Temperature(C)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
own_theme <- theme_bw(base_size = 11) +
theme(rect = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
axis.line = element_line(color = "black"),
panel.grid.minor = element_blank())
#ppt and tmeanC, option 2
summary(data$ppt.cm)
pred_tmeanppt <- ggpredict(m3P, terms = c("tmeanC","ppt.cm[101,110]"))
pred_tmeanppt$ppt_group <- pred_tmeanppt$group
levels(pred_tmeanppt$ppt_group) <- c("low (92-104)",
"high (104-142)")
data <- data %>%
drop_na(ppt.cm) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
mgPOM_tmeanppt <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanppt, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Temperature(C)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_tmeanppt
#ppt and tmeanC, option 2
summary(data$ppt.cm)
pred_tmeanppt <- ggpredict(m3P, terms = c("tmeanC","ppt.cm[101,110]"))
pred_tmeanppt$ppt_group <- pred_tmeanppt$group
levels(pred_tmeanppt$ppt_group) <- c("low (92-104)",
"high (104-142)")
data <- data %>%
drop_na(ppt.cm) %>%
dplyr::mutate(ppt_group = cut(ppt.cm, breaks = c(92,104,142)))
levels(data$ppt_group) <- c("low (92-104)",
"high (104-142)")
mgPOM_tmeanppt <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP, col = ppt_group), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanppt, mapping = aes(x=x, y=predicted, col = ppt_group), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg POC g"^-1,"soil")) +
scale_x_continuous(expression("Mean Annual Temperature(C)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_tmeanppt
# Perform linear regression
regression_model <- lm(mgCpergSoilP ~ overall.score, data = data)
# Summarize the regression model
summary(regression_model)
# Perform linear regression
regression_model <- lm(mgCpergSoilM ~ overall.score, data = data)
# Summarize the regression model
summary(regression_model)
# Perform linear regression
regression_model <- lm(overall.score ~ mgCpergSoilM, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilM, y = overall.score)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of mgCpergSoilP on overall.score",
x = "mgC per g Soil M",
y = "Overall Score") +
theme_minimal()
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilM, y = overall.score)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of overall.score onmgCpergSoilM",
x = "mgC per g Soil M",
y = "Overall Score") +
theme_minimal()
# Perform linear regression
regression_model <- lm(overall.score ~ mgCpergSoilM, data = data)
# Summarize the regression model
summary(regression_model)
# Perform linear regression
regression_model <- lm(overall.score ~ mgCpergSoilP, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = mgCpergSoilP, y = overall.score)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of overall.score on mgCpergSoilP",
x = "mgC per g Soil P",
y = "Overall Score") +
theme_minimal()
# Perform linear regression
regression_model <- lm(overall.score ~ logitpropM, data = data)
# Summarize the regression model
summary(regression_model)
# Create a plot with the regression line
ggplot(data, aes(x = logitpropM, y = overall.score)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Linear Regression of overall.score on logitpropM",
x = "logitpropM",
y = "Overall Score") +
theme_minimal()
# Use table() function to count occurrences of each field type
type_counts <- table(data$Type.x)
# Print the counts
print(type_counts)
# Use table() function to count occurrences of each field type
type_counts <- table(data$soil_texture_class)
# Print the counts
print(type_counts)
