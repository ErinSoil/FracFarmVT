#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(openmeteo)
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
data <- read.csv("data.csv")
library(ggplot2)
library(sf)
library(maps)
library(mapdata)
vermont_map <- map_data("state")
vermont_map <- subset(vermont_map, region == "vermont")
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = Loc, aes(x = lon, y = lat), color = "red", size = 3) +
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude") +
theme_minimal()
data <- read.csv(file="fracData2.csv", header=TRUE, sep=",")
data <- data %>%
left_join(Loc, by = "Field_Code")
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
summary(data$mgCpergSoilM)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(11, 15, 21, 25),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(3, 48)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Latitude and Longitude Points on the Map of Vermont",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
summary(data$mgCpergSoilM)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(11, 15, 21, 25),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(3, 48)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Farm Locations colored by levels of MAOM(mg)",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
summary(data$mgCpergSoilM)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilM), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(11, 15, 21, 25),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(3, 48)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Farm locations by levels of MAOM(mg)",
x = "Longitude",
y = "Latitude",
color = "MgMAOM") +  # Add color legend title
theme_minimal()
summary(data$mgCpergSoilP)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = mgCpergSoilP), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(4, 6, 8, 12),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(2, 32)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Farm locations by levels of POM(mg)",
x = "Longitude",
y = "Latitude",
color = "MgPOM") +  # Add color legend title
theme_minimal()
library(gtools)
data <- data %>%
dplyr::mutate(logitpropM = logit(propM))
summary(data$logitpropM)
ggplot() +
geom_polygon(data = vermont_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = data, aes(x = lon, y = lat, color = logitpropM), size = 3) +
scale_color_gradientn(colors = c("blue", "green", "yellow", "red"),  # Adjust colors as needed
breaks = c(.4, .8, 1.1, 2),
labels = c("Low", "Moderate", "High", "Very High"),
limits = c(-1, 2)) +  # Adjust limits based on your data
coord_fixed(1.3) +  # Fix aspect ratio
labs(title = "Farm locations by proportion of MAOM",
x = "Longitude",
y = "Latitude",
color = "logit Proportion MAOM") +  # Add color legend title
theme_minimal()
library(corrplot)
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","Latitude", "Longitude", "tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
view(cordata)
library(nlme)
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon +aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(emmeans)
library(nlme)
library(ggeffects)
data <- read.csv("data.csv")
m3P=gls(mgCpergSoilP~ppt.cm*tmeanC
+aggregate_stability+active_carbon
, data=data, na.action=na.exclude, method="ML")
summary(m3P)
n <- nobs(m3P)
print(n)
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon + aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
summary(m3)
n <- nobs(m3)
print(n)
m4M <- gls(logitpropM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon,
data = data,
na.action = na.exclude,
method = "ML")
summary(m4M)
ata$logitpropM.pred=as.vector(fitted(m4M))
data$logitpropM.pred=as.vector(fitted(m4M))
R3=lm(logitpropM~logitpropM.pred, data=data, na.action=na.omit)
summary(R3)
summary(m3P)
anova(m3P)
# Perform ANOVA on the model
anova_result <- anova(m3P)
# Print the ANOVA table
print(anova_result)
# Extract the degrees of freedom for each variable
num_df <- anova_result$"numDF"  # Numerator degrees of freedom
den_df <- anova_result$"denDF"  # Denominator degrees of freedom
# Print the degrees of freedom
print(num_df)
print(den_df)
m3 = gls(mgCpergSoilM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon + aggregate_stability,
data = data,
na.action = na.exclude,
method = "ML")
summary(m3)
anova(m3)
m4M <- gls(logitpropM ~ ppt.cm * soil_texture_clay * tmeanC + ppt.cm * tmeanC +
active_carbon,
data = data,
na.action = na.exclude,
method = "ML")
summary(m4M)
anova(m4M)
# Perform linear regression
regression_model <- lm(mgCpergSoilM ~ overall.score, data = data)
# Summarize the regression model
summary(regression_model)
# Perform linear regression
regression_model <- lm(mgCpergSoilP ~ overall.score, data = data)
# Summarize the regression model
summary(regression_model)
# Perform linear regression
regression_model <- lm(logitpropM ~ overall.score, data = data)
# Summarize the regression model
summary(regression_model)
