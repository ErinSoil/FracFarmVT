ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Temperature (C)"),
label = scales::comma)
POM_tmeanC
#ppt and tmeanC
pred_ppt <- ggpredict(m1P, terms = c("ppt.cm"))
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC","ppt.cm[95,115]"))
summary(data$ppt.cm)
mgPOM_ppt <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ppt, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma)
mgPOM_ppt
ggsave("mgPOM_ppt.jpeg", width = 4, height = 3)
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC", "soil_texture_clay[20]"))
mgPOM_tmeanC <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Temperature (C)"),
label = scales::comma)
POM_tmeanC
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC", "soil_texture_clay[20]"))
mgPOM_tmeanC <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Temperature (C)"),
label = scales::comma)
POM_tmeanC
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC", "soil_texture_clay[20]"))
POM_tmeanC <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Temperature (C)"),
label = scales::comma)
POM_tmeanC
ggsave("POM_tmeanC.jpeg", width = 4, height = 3)
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC"))
POM_tmeanC <-data %>%
ggplot() +
geom_point(aes(x = tmeanC, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_tmeanC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Temperature (C)"),
label = scales::comma)
POM_tmeanC
ggsave("POM_tmeanC.jpeg", width = 4, height = 3)
pred_ppt <- ggpredict(m1P, terms = c("ppt.cm"))
mgPOM_ppt <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ppt, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma)
mgPOM_ppt
ggsave("mgPOM_ppt.jpeg", width = 4, height = 3)
summary(data$tmeanC)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "tmeanC[5,8]"))
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC","ppt.cm[95,115]"))
mgPOM_pptC <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_pptC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Precipitation (cm) and Temp (C)"),
label = scales::comma)
mgPOM_pptC
ggsave("mgPOM_ppt_tmeanC.jpeg", width = 4, height = 3)
pred_aggregate_stability <- ggpredict(m1P, terms = c("aggregate_stability"))
mgPOM_aggregate_stability <-data %>%
ggplot() +
geom_point(aes(x = aggregate_stability, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_aggregate_stability, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("aggregate stability"),
label = scales::comma)
mgPOM_aggregate_stability
ggsave("mgPOM_aggregate_stability.jpeg", width = 4, height = 3)
pred_active_carbon <- ggpredict(m1P, terms = c("active_carbon"))
mgPOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("active carbon"),
label = scales::comma)
mgPOM_active_carbon
ggsave("mgPOM_active_carbon.jpeg", width = 4, height = 3)
pred_soil_texture_clay <- ggpredict(m1P, terms = c("soil_texture_clay"))
mgPOM_soil_texture_clay <-data %>%
ggplot() +
geom_point(aes(x = soil_texture_clay, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_soil_texture_clay, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("clay"),
label = scales::comma)
mgPOM_soil_texture_clay
ggsave("mgPOM_soil_texture_clay.jpeg", width = 4, height = 3)
pred_ph <- ggpredict(m1P, terms = c("ph"))
mgPOM_ph <-data %>%
ggplot() +
geom_point(aes(x = ph, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ph, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("ph"),
label = scales::comma)
mgPOM_ph
ggsave("mgPOM_ph.jpeg", width = 4, height = 3)
pred_active_carbon <- ggpredict(m1, terms = c("active_carbon"))
pred_active_carbon <- ggpredict(Pm1, terms = c("active_carbon"))
pred_active_carbon <- ggpredict(m1P, terms = c("active_carbon"))
mgMAOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbon
ggsave("mgMAOM_active_carbon.jpeg", width = 4, height = 3)
pred_active_carbon <- ggpredict(m1P, terms = c("active_carbon"))
mgMAOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted),color==Type.x #plot the model's prediction (based on linear )
lwd = 1) +
pred_active_carbon <- ggpredict(m1P, terms = c("active_carbon"))
mgMAOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted),color="Type.x" #plot the model's prediction (based on linear )
lwd = 1) +
pred_active_carbon <- ggpredict(m1P, terms = c("active_carbon"))
mgMAOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted),color="Type.x",
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbon
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
data <- read.csv(file="fracData.csv", header=TRUE, sep=",")
data <- data %>%
mutate(claycategory=cut(soil_texture_clay, breaks=c(-Inf, 14, 24, Inf), labels=c("low","med", "high")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
data <- data %>%
mutate(claycategory=cut(soil_texture_clay, breaks=c(-Inf, 14, 24, Inf), labels=c("low","med", "high")))
ggplot(data=data, aes(x=ppt.cm, y=mgCpergSoilM, col=soil_texture_clay))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
cordata <- cor(data[,c("mgCpergSoilM","ph","ppt.cm","tmeanC","aggregate_stability","soil_texture_clay","active_carbon")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
view(cordata)
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay+
soil_texture_clay*tmeanC+ppt.cm*tmeanC+aggregate_stability+active_carbon+
ph, data=data, na.action=na.exclude, method="ML")
summary(m1)
anova(m1)
mb=gls(mgCpergSoilM~ppt.cm*tmeanC+aggregate_stability+active_carbon+
ph+ppt.cm*soil_texture_clay+
soil_texture_clay*tmeanC data=data, na.action=na.exclude, method="ML")
mb=gls(mgCpergSoilM~ppt.cm*tmeanC+aggregate_stability+active_carbon+
ph+ppt.cm*soil_texture_clay+
soil_texture_clay*tmeanC, data=data, na.action=na.exclude, method="ML")
summary(mb)
anova(mb)
pred_active_carbon <- ggpredict(m1, terms = c("active_carbon"))
mgMAOM_active_carbon <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, fill=Type.x),
size = 1.5, alpha = 0.5)
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, fill=Type.x),
size = 1.5, alpha = 0.5)
geom_line(pred_active_carbon, mapping = aes(x=x, y=predicted)
lwd = 1) +
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, fill=Type.x),
size = 1.5, alpha = 0.5)
geom_smooth() +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, fill=Type.x),
size = 1.5, alpha = 0.5) +
geom_smooth() +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbonbyField
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, fill=Type.x),
size = 1.5, alpha = 0.5) +
#geom_smooth() +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbonbyField
ggsave("mgMAOM_active_carbonbyField.jpeg", width = 4, height = 3)
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, color=Type.x),
size = 1.5, alpha = 0.5) +
#geom_smooth() +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbonbyField
#analyze data by field type. group by and color by field type this code is in progress
mgMAOM_active_carbonbyField <-data %>%
ggplot() +
geom_point(aes(x = active_carbon, y = mgCpergSoilM, color=Type.x),
size = 1.5, alpha = 0.5) +
#geom_smooth() +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("active_carbon"),
label = scales::comma)
mgMAOM_active_carbonbyField
mgMAOM_FieldType <-data %>%
ggplot() +
geom_point(aes(x = Type.x, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(Type.x, mapping = aes(x=x, y=predicted),color="Type.x",
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in MAOM per g soil"))+
scale_x_continuous(expression("Field Type"),
label = scales::comma)
#Plot by field type
view(data)
#Plot by field type
view(data)
mgPOM_FieldType <-data %>%
ggplot() +
geom_point(aes(x = Type.x, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(Type.x, mapping = aes(x=x, y=predicted),color="Type.x",
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Field Type"),
label = scales::comma)
POM <- ggplot(data, aes(x=Type.x, y=mgCpergSoilP)) +
geom_boxplot()
POM
mgPOMbyFieldType <- ggplot(data, aes(x=Type.x, y=mgCpergSoilP)) +
geom_boxplot()
mgPOMbyFieldType
ggplot() +
geom_point(aes(x = Type.x, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(Type.x, mapping = aes(x=x, y=predicted),color="Type.x",
lwd = 1) +
own_theme+
#theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Field Type"),
label = scales::comma)
ggsave("mgPOM_FieldType.jpeg", width = 4, height = 3)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "tmeanC[5,8]"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC$predicted$tmeanC <- factor(pred_pptC$predicted$tmeanC)
# Assuming the tmeanC variable has two levels
# Convert tmeanC to factor
tmeanC <- factor(tmeanC)
tmeanC <- data %>%
factor(tmeanC)
tmeanC_factor <- data %>%
factor(tmeanC)
# Assuming the tmeanC variable has two levels
# Convert tmeanC to factor
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = tmeanC), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
rland::last_trace()
rlang::last_trace()
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "tmeanC[5,8]"))
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC","ppt.cm[95,115]"))
mgPOM_pptC <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_pptC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
ggsave("mgPOM_ppt_tmeanC.jpeg", width = 4, height = 3)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC","factor(ppt.cm[95,115])"))
mgPOM_pptC <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_pptC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
#pred_tmeanC <- ggpredict(m1P, terms = c("tmeanC","factor(ppt.cm[95,115])"))
mgPOM_pptC <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_pptC, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
# Convert predicted values to a data frame
pred_df <- as.data.frame(pred_pptC$predicted)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_df <- as.data.frame(pred_pptC$predicted)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_df, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_df, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
