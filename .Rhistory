scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
# Convert predicted values to a data frame
pred_df <- as.data.frame(pred_pptC$predicted)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the predicted values from pred_pptC
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_df <- as.data.frame(pred_pptC$predicted)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_df, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_df, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(emmeans)
library(nlme)
library(ggeffects)
data <- read.csv(file="fracData.csv", header=TRUE, sep=",")
m1P=gls(mgCpergSoilP~soil_texture_clay*ppt.cm+soil_texture_clay*tmeanC+ppt.cm*tmeanC+aggregate_stability*active_carbon+
ph, data=data, na.action=na.exclude, method="ML")
summary(m1P)
anova(m1P)
own_theme <- theme_bw(base_size = 11) +
theme(rect = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
axis.line = element_line(color = "black"),
panel.grid.minor = element_blank())
pred_ppt <- ggpredict(m1P, terms = c("ppt.cm"))
mgPOM_ppt <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ppt, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil"))+
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma)
mgPOM_ppt
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(tmeanC)), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
summary(pred_pptC)
str(pred_pptC)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
view(data)
data <- as.data.frame(data)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
data <- as.data.frame(data)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
str(data)
str(tmeanC)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
data <- as.data.frame(data)
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
# Ensure 'data' remains a data frame
if (!is.data.frame(data)) {
stop("Data must be a data frame.")
}
mgPOM_pptC <- ggplot(data) +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- as.data.frame(data)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- as.data.frame(data)
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
if (!is.data.frame(data)) {
stop("Data must be a data frame.")
}
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- as.data.frame(data)
if (!is.data.frame(data)) {
stop("Data must be a data frame.")
}
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$data, # use the converted predicted values data frame
aes(x = x, y = pred_pptC, factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$data, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$data, # use the converted predicted values data frame
aes(x = x, y = pred_pptC, factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$data, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted$data, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$data, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = pred_pptC, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c("5", "8")))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels=c(5,8)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # remember to define/run own theme first
theme(legend.position = "none") +  #I think we take this out because we do want a legend of colors
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25), labels = c(5, 8)))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC$predicted, # use the converted predicted values data frame
aes(x = x, y = predicted, color = factor(group, levels = c(5, 8))), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
data <- data %>%
mutate(group = cut(tmeanC, breaks = c(-10,6.5,25)))
pred_pptC <- ggpredict(m1P, terms = c("ppt.cm", "factor(tmeanC[5,8])"))
mgPOM_pptC <- data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilP), # plot your data
size = 1.5, alpha = 0.5) +
geom_line(data = pred_pptC, # use the converted predicted values data frame
aes(x = x, y = predicted, color = group), # color by tmeanC levels
lwd = 1) +
own_theme + # assuming you have your own theme defined
theme(legend.position = "none") +
scale_y_continuous(expression("mg C in POM per g soil")) +
scale_x_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma) +
scale_color_manual(values = c("blue", "red")) # adjust colors if needed
mgPOM_pptC
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
