library(dplyr)
Frac <- read.csv(file="Frac.csv", header=TRUE, sep=",")
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
Mang <- read.csv(file="Mang.csv", header=TRUE, sep=",")
Master <- read.csv(file="Master.csv", header=TRUE, sep=",", fileEncoding="latin1")
PRISM2annual <- read.csv(file="PRISM2annual.csv", header=TRUE, sep=",")
data<-Frac %>%
left_join(.,Mang,by="Field_Code")
data<-data %>%
left_join(.,Master,by=c("Field_Code", "soil_texture_class"))
data<-data %>%
left_join(.,Master,by="Field_Code")
data<-data %>%
left_join(.,PRISM2annual,by="Field_Code")
names(data)
library(corrplot)
library(emmeans)
cordata <- cor(data[,c("ph.x","ppt.cm","tmeanC","aggregate_stability.x","soil_texture_clay.x","active_carbon.x")], use="pairwise.complete.obs", method="pearson")
corrplot(cordata)
cordata
data
#look for interactions between independent variables
ggplot(data=data)+ geom_point (aes(x=tmeanCannual, y=mcCpergSoilM, fill=soil_texture_clay.x))+geom_smooth()
#look for interactions between independent variables
ggplot(data=data)+ geom_point (aes(x=tmeanCannual, y=mcCpergSoilM, fill=soil_texture_clay.x))+geom_smooth
ggplot(data=data)+ geom_point (aes(x=tmeanC, y=mcCpergSoilM, fill=soil_texture_clay.x))+geom_smooth()
#look for interactions between independent variables
ggplot(data=data)+ geom_point (aes(x=tmeanC, y=mgCpergSoilM, fill=soil_texture_clay.x))+geom_smooth()
ggplot(data=data)+ geom_point (aes(x=tmeanC, y=mgCpergSoilM, fill=soil_texture_clay.x))+geom_smooth()
rlang::last_trace()
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, fill=soil_texture_clay.x))+
geom_point()+
geom_smooth()
#look for interactions between independent variables
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth()
summary(data$soil_texture_clay.x)
#look for interactions between independent variables
data <- data %>%
mutate(claycategory=cut(soil_texture_clay.x, breaks=c(-Inf, 21.465, Inf), labels=c("low","high")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth()+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
View(data)
#look for interactions between independent variables
data <- data %>%
mutate(claycategory=cut(soil_texture_clay.x, breaks=c(-Inf, 14, 24, Inf), labels=c("low","med", "high")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth()+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
> summary(ph)
> summary(data$ph.x)
summary(data$ph)
summary(data$ph.x)
data <- data %>%
mutate(phcategory=cut(ph, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high")))
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high")))
rlang::last_trace()
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high")))
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=ph.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ phcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ppt.cm, y=mgCpergSoilM, col=ph.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ phcategory, ncol=1, scales="free_x")
summary(data$ppt.cm)
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
ggplot(data=data, aes(x=aggregate_stability.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
#interactions with aggregate stability
summary(data$aggregate_stability.x)
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ AgScategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agScategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agStcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ppt.cm, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agStcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agStcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=soil_texture_clay.x, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agStcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(agStcategory=cut(aggregate_stability.x, breaks=c(-Inf,29.8, 46.7, 63.7, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=active_carbon.x, y=mgCpergSoilM, col=aggregate_stability.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ agStcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=active.carbon.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=active.carbon.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
#look for interactions between independent variables
data <- data %>%
mutate(claycategory=cut(soil_texture_clay.x, breaks=c(-Inf, 14, 24, Inf), labels=c("low","med", "high")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
#more interactions with ph
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=ph.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ phcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(phcategory=cut(ph.x, breaks=c(-Inf,6.17, 6.52, 6.93, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ppt.cm, y=mgCpergSoilM, col=ph.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ phcategory, ncol=1, scales="free_x")
#interactions with ppt
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=tmeanC, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=aggregate_stability.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=ph.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(pptcategory=cut(ppt.cm, breaks=c(-Inf,101.4, 106.4, 110.0, Inf), labels=c("low","med","high", "veryhigh")))
ggplot(data=data, aes(x=active.carbon.x, y=mgCpergSoilM, col=ppt.cm))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ pptcategory, ncol=1, scales="free_x")
data <- data %>%
mutate(claycategory=cut(soil_texture_clay.x, breaks=c(-Inf, 14, 24, Inf), labels=c("low","med", "high")))
ggplot(data=data, aes(x=ppt.cm, y=mgCpergSoilM, col=soil_texture_clay.x))+
geom_point()+
geom_smooth(method=lm)+
facet_wrap(~ claycategory, ncol=1, scales="free_x")
m1=lm(mgCpergSoilM~ppt.cm*soil_texture_clay.x+soil_texture_clay.x*tmeanC+ppt.cm*tmeanC, aggregate_stablity.x, active_carbon.x, ph.x, data=data, na.action=na.exclude, method="REML")
m1=lm(mgCpergSoilM~ppt.cm*soil_texture_clay.x+soil_texture_clay.x*tmeanC+ppt.cm*tmeanC, aggregate_stability.x, active_carbon.x, ph.x, data=data, na.action=na.exclude, method="REML")
data <- data %>%
m1=lm(mgCpergSoilM~ppt.cm*soil_texture_clay.x+soil_texture_clay.x*tmeanC+ppt.cm*tmeanC, aggregate_stability.x, active_carbon.x, ph.x, data=data, na.action=na.exclude, method="REML")
data <- data %>%
m1=lmer(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="REML")
library(lme4)
library(lmerTest)
library(lme4)
library(lmerTest)
data <- data %>%
m1=lmer(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="REML")
data <- data %>%
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="REML")
library(nlme, lib.loc = "C:/Program Files/R/R-4.2.3/library")
library(nlme)
anova(m1)
data <- data %>%
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="REML")
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="REML")
summary(m1)
anova(m1)
m2=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="REML")
anova(m1,m2)
anova(m2)
m3=gls(mgCpergSoilM~ppt.cm+soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="REML")
anova(m2,m3)
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="ML")
summary(m1)
anova(m1)
m2=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="ML")
anova(m1,m2)
anova(m2)
m3=gls(mgCpergSoilM~ppt.cm+soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="ML")
anova(m2,m3)
anova(m3)
m4=gls(mgCpergSoilM~ppt.cm+soil_texture_clay.x+
soil_texture_clay.x*tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="ML")
anova(m3,m4)
anova(m4)
m5=gls(mgCpergSoilM~ppt.cm+soil_texture_clay.x+
tmeanC+aggregate_stability.x+
active_carbon.x,
data=data, na.action=na.exclude, method="ML")
anova(m4,m5)
anova(m5)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
library(tidyverse)
library(ggplot2)
library(dplyr)
PRISM2annual <- read.csv(file="PRISM2annual.csv", header=TRUE, sep=",")
corrplot(cordata)
Frac <- read.csv(file="Frac.csv", header=TRUE, sep=",")
Loc <- read.csv(file="Location.csv", header=TRUE, sep=",")
Mang <- read.csv(file="Mang.csv", header=TRUE, sep=",")
Master <- read.csv(file="Master.csv", header=TRUE, sep=",", fileEncoding="latin1")
PRISM2annual <- read.csv(file="PRISM2annual.csv", header=TRUE, sep=",")
Mang<-Mang %>%
rename(Field_Code=Field.Code)
View(Mang)
PRISMannual<-PRISMannual %>%
rename(Field_Code=Name)
PRISM2annual<-PRISM2annual %>%
rename(Field_Code=Name)
mutate(Type.x=as.factor(Type.x),
Owned=as.factor(Owned))
data<-Frac %>%
left_join(.,Mang,by="Field_Code")
data<-data %>%
left_join(.,Master,by=c("Field_Code", "soil_texture_class"))
data<-data %>%
left_join(.,Master,by="Field_Code")
data<-data %>%
left_join(.,PRISM2annual,by="Field_Code")
names(data)
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="ML")
library(nlme)
m1=gls(mgCpergSoilM~ppt.cm*soil_texture_clay.x+
soil_texture_clay.x*tmeanC+ppt.cm*tmeanC+aggregate_stability.x+active_carbon.x+
ph.x, data=data, na.action=na.exclude, method="ML")
summary(m1)
anova(m1)
F_Final <- fitted(m1)
R_Final <- residuals(m1, type = "pearson", scaled = TRUE)
N = !is.na(data$mgCpergSoilM)
Rfull <- NA
Rfull[N] <- R_Final
op <- par(mfrow = c(2,2), mar = c(5,4,1,1))  #I can't figure this part out
plot(F_Final, R_Final)
hist(Rfull)
boxplot(Rfull ~ data$mgCpergSoilM)
boxplot(Rfull ~ data$aggregate_stability.x)
plot(Rfull ~ data$soil_texture_clay.x)
plot(Rfull ~ data$active_carbon.x)
plot(Rfull ~ data$tmeanC)
plot(Rfull ~ data$ppt.cm)
par(op)
plot(Rfull ~ data$aggregate_stability.x)
F_Final <- fitted(m1)
R_Final <- residuals(m1, type = "pearson", scaled = TRUE)
N = !is.na(data$mgCpergSoilM)
Rfull <- NA
Rfull[N] <- R_Final
op <- par(mfrow = c(2,2), mar = c(5,4,1,1))  #I can't figure this part out
plot(F_Final, R_Final)
hist(Rfull)
plot(Rfull ~ data$aggregate_stability.x)
plot(Rfull ~ data$soil_texture_clay.x)
plot(Rfull ~ data$active_carbon.x)
plot(Rfull ~ data$tmeanC)
plot(Rfull ~ data$ppt.cm)
par(op)
mgMAOM_ppt <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ppt, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_x_continuous(expression("mg C in MAOM per g soil"))+
scale_y_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma)
mgMAOM_ppt <-data %>%
ggplot() +
geom_point(aes(x = ppt.cm, y = mgCpergSoilM), #plot your data
size = 1.5, alpha = 0.5) +
geom_line(pred_ppt, mapping = aes(x=x, y=predicted), #plot the model's prediction (based on linear )
lwd = 1) +
own_theme+
theme(legend.position = "none") +
scale_x_continuous(expression("mg C in MAOM per g soil"))+
scale_y_continuous(expression("Mean Annual Precipitation (cm)"),
label = scales::comma)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
##call in the analytical data
data <- read.csv(file="data.csv", header=TRUE, sep=",")
View(data)
View(data)
install package (eml)
install.packages("iml")
library(iml)
model_data_1 <- Predictor$new(RFtest1, data = fracData_rmALL %>%
dplyr::select(-mgCpergSoilM))
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
##call in the analytical data
fracData <- read.csv(file="fracData.csv", header=TRUE, sep=",")
library(iml)
#run with more variables
RFtest1 <- ranger(mgCpergSoilM ~ ., data = fracData_rmALL, importance = "permutation")
library(ranger)
library(skimr)
library(iml)
#run with more variables
RFtest1 <- ranger(mgCpergSoilM ~ ., data = fracData_rmALL, importance = "permutation")
view(fracData_rmALL)
fracData_rmALL <- fracDataNum %>%
select(active_carbon,ph,ppt.cm,tmeanC,overall.score, soil_texture_sand, soil_texture_silt, soil_texture_clay, organic_matter, aggregate_stability, pred_water_capacity, mgCpergSoilM) %>%
#remove the rows with ~25ish missing data
drop_na()
library(tidyverse)
fracData_rm <- fracDataNum %>%
select(#list all the columns I want to keep with commas, no ") %>%
#remove the rows with ~25ish missing data
drop_na()
fracData_rm <- fracDataNum %>%
fracData_rmALL <- fracDataNum %>%
select(active_carbon,ph,ppt.cm,tmeanC,overall.score, soil_texture_sand, soil_texture_silt, soil_texture_clay, organic_matter, aggregate_stability, pred_water_capacity, mgCpergSoilM) %>%
#remove the rows with ~25ish missing data
drop_na()
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
##call in the analytical data
fracData <- read.csv(file="fracData.csv", header=TRUE, sep=",")
fracDataNum <- fracData %>%
select_if(is.numeric)
view(fracDataNum)
fracDataNum_noNA <- fracData %>%
select_if(is.numeric) %>%
drop_na()
view(fracDataNum_noNA)
#summary of dataframe
skimr::skim_without_charts(fracDataNum)
# create a new dataframe with more variables for the rf
fracData_rmALL <- fracData %>%
select(active_carbon,ph,ppt.cm,tmeanC,overall.score, soil_texture_sand, soil_texture_silt, soil_texture_clay, organic_matter, aggregate_stability, pred_water_capacity, mgCpergSoilM) %>%
#remove the rows with ~25ish missing data
drop_na()
view(fracData_rmALL)
library(ranger)
library(skimr)
library(iml)
library(tidyverse)
#run with more variables
RFtest1 <- ranger(mgCpergSoilM ~ ., data = fracData_rmALL, importance = "permutation")
model_data_1 <- Predictor$new(RFtest1, data = fracData_rmALL %>%
dplyr::select(-mgCpergSoilM))
pdp_all <- FeatureEffects$new(model_data_1, method = "pdp")
plot(pdp_all)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
##call in the analytical data
fracData <- read.csv(file="fracData.csv", header=TRUE, sep=",")
fracDataNum_noNA <- fracData %>%
select_if(is.numeric) %>%
drop_na()
fracDataNum <- fracData %>%
select_if(is.numeric)
# create a new df with select only continuous variables
fracDataNum <- fracData
fracDataNum_noNA <- fracData %>%
select_if(is.numeric) %>%
drop_na()
select_if(is.numeric)
fracDataNum_noNA <- fracData
select_if(is.numeric) %>%
drop_na()
fracDataNum_noNA <- fracData %>%
select_if(is.numeric) %>%
drop_na()
#remove all rows (farm fields) that have a missing variable
fracDataNum_noNA <- fracData %>%
select_if(is.numeric)
view(fracDataNum_noNA)
fracDataNum_noNA <- fracData %>%
select_if(is.numeric)  %>%
drop_na()
fracData_rm <- fracDataNum %>%
select(#list all the columns I want to keep with commas, no ") %>%
#remove the rows with ~25ish missing data
drop_na()
fracData_rm <- fracDataNum %>%
fracData_rmALL <- fracData %>%
select(active_carbon,ph,ppt.cm,tmeanC,overall.score, soil_texture_sand, soil_texture_silt, soil_texture_clay, organic_matter, aggregate_stability, pred_water_capacity, mgCpergSoilM) %>%
#remove the rows with ~25ish missing data
drop_na()
library(ranger)
library(skimr)
library(iml)
library(tidyverse)
RFmgCperSoilP <- ranger(mgCpergSoilP ~ ., data = fracData_rm, importance = "permutation")
fracData_rm <- fracDataNum %>%
select(active_carbon,ph,ppt.cm, mgCpergSoilP, Type.x) %>%
#remove the rows with ~25ish missing data
drop_na()
View(fracData)
#setwd("/Users/f003833/Documents/GitHub/FracFarmVT") #caitlin
setwd("C:/Users/F004SPC/Documents/GitHub/FracFarmVT") #erin
##call in the analytical data
fracData <- read.csv(file="fracData.csv", header=TRUE, sep=",")
fracDataNum_noNA <- fracData %>%
select_if(is.numeric)  %>%
drop_na()
#summary of dataframe
skimr::skim_without_charts(fracDataNum)
#summary of dataframe
skimr::skim_without_charts(fracDataNum_noNA)
View(fracDataNum_noNA)
fracDataNum <- fracData
select_if(is.numeric)
View(fracDataNum_noNA)
View(fracData)
fracData_rm <- fracData %>%
select(#list all the columns I want to keep with commas, no ") %>%
#remove the rows with ~25ish missing data
drop_na()
fracData_rm <- fracData %>%
view(fracData_rm)
fracData_soilhealth <- fracDataNum %>%
select(overall.score, mgCpergSoilM) %>%
#remove the rows with ~25ish missing data
drop_na()
view(fracData_soilhealth)
